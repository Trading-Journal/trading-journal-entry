name: Build and Publish Docker Image

on:
  pull_request:
    branches: [master]

env:
  APP_NAME: trading-journal-entry

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Build with Maven
        env:
         PASSWORD: ${{ secrets.PACKAGE_TOKEN }}
        run: |
         mvn -B clean package --file pom.xml --settings settings.xml
         echo "::set-output name=APP_VERSION::$(mvn --file pom.xml --settings settings.xml  -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)"
        id: build-version
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: $APP_NAME
          path: target/*.jar
      - name: Save version
        uses: noobly314/share-data@v1
        with:
          share-id: app_version
          mode: set
          key: version
          value: ${{ steps.build-version.outputs.APP_VERSION }}-test

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Get Version
        id: get-version
        uses: noobly314/share-data@v1
        with:
          share-id: app_version
          mode: get
          key: version
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: $APP_NAME
          path: target
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
      - name: Docker Build Version DEV
        run: docker build -t allanweber/$APP_NAME:${{ steps.get-version.outputs.data }} -f docker/DockerfileTest .
      - name: Build and Push Version
        run: docker push allanweber/$APP_NAME:${{ steps.get-version.outputs.data }}
      - name: Delete Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: $APP_NAME

#  deploy:
#   name: Deploy a new version in DEV (Heroku)
#   runs-on: ubuntu-latest
#   needs: [build, docker]
#   steps:
#     - name: Get Version
#       id: get-version
#       uses: noobly314/share-data@v1
#       with:
#         share-id: app_version
#         mode: get
#         key: version
#     - name: Docker Login
#       run: echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
#     - name: Get Docker Image
#       run: docker pull allanweber/$APP_NAME:${{ steps.get-version.outputs.data }}
#     - name: Docker Logout
#       run: docker logout
#     - name: Push Heroku DEV
#       env:
#         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#       run: |
#         docker login --username=_ --password=${{ secrets.HEROKU_API_KEY }} registry.heroku.com
#         docker tag allanweber/$APP_NAME:${{ steps.get-version.outputs.data }} registry.heroku.com/$APP_NAME/web
#         docker push registry.heroku.com/$APP_NAME/web
#         heroku container:release web -a=$APP_NAME
#
#  test:
#     name: Newman API Test
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Run API Tests
#         id: run-newman
#         uses: anthonyvscode/newman-action@v1
#         with:
#           collection: postman/TJA.postman_collection.json
#           environment: postman/TJA_test.postman_environment.json
#           reporters: cli
